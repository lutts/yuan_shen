# 手法1：夜兰e 芙芙qeaa 万叶e  夜兰eq 芙芙zaaz，万叶e，夜兰eaaa......

第一刀：无任何加成
第二刀：专武一层
第三刀：41.7% 39.7%  39.9% 57.2%
第四刀：78.5%  47.7% 78.6% 57.2%
第五刀：82.8%  52.6%  87.9% 61.9%
第六刀：97.5% 57.5%  101.3%  96.5%

手法1的伤害构成：
q：无万叶增伤，有夜兰四命一次加成
e：无万叶增伤，有夜兰四命一次加成

夫人：无万叶增伤，有夜兰四命一次加成，256层
勋爵：无万叶增伤，有夜兰四命一次加成，256层
螃蟹：无万叶增伤，有夜兰四命一次加成，256层

夫人：专武叠满，有夜兰四命一次加成，350层
夫人：专武叠满，有夜兰四命二次加成，11%
勋爵：专武叠满，有夜兰四命二次加成，34%
夫人：专武叠满，有夜兰四命二次加成，41.9%，夜兰4.5%
《切白芙，砍四刀再切黑芙》
夫人：专武叠满，有夜兰四命二次加成，120%
螃蟹：专武叠满，有夜兰四命二次加成，140%
勋爵：专武叠满，有夜兰四命二次加成，140%
《夜兰第三个e》
夫人：专武叠满，有夜兰四命三次加成，140%
夫人：专武叠满，有夜兰四命三次加成，140%
勋爵：专武叠满，有夜兰四命三次加成，140%
夫人：专武叠满，有夜兰四命三次加成，140%
螃蟹：专武叠满，有夜兰四命三次加成，140%
夫人：专武叠满，有夜兰四命三次加成，140%
勋爵：专武叠满，有夜兰四命三次加成，140%
《芙芙大招效果消失》
夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失
夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效
勋爵：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效，减抗失效
螃蟹：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效，减抗失效
夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效，减抗失效
夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效，减抗失效


## 手法2：芙芙q，万叶q，芙芙eaa 夜兰eqe，芙芙zaaz, 万叶e, 夜兰aaaeaa......

				ufzh5352     uiyo7432		awbw5598		wook8296
勋    爵：22.2%			18%				18%				18.3%
第三刀：45.8%			37.6%			37.6%				37.9%(实为第四刀)
第四刀：53.6%			49.5%			47.4%				37.9%(实为第五刀，wook里这两刀生命值一致其实是正常的，因为这期间都是满血的，不扣血也不治疗，uiyo和awbw是因为被怪打了)
第五刀：54.8%			54.3%			53.3%				42.8%(实为第六刀)
第六刀：64.8%			75.9%			68.2%				48.9%
夫    人：120.4%		127.7%			111%					113.8%（这里突然和awbw相同是因为生命值调整线程的运行时机问题)
螃    蟹：127.8%		140%				136.1%				121.3%
勋    爵：127.8%								136.1%				121.3%
夫    人：140%									140%					139.8%
夫    人：																			140%

其中

* ufzh5352: 第一次勋爵22.2%是因为第二次夫人扣血不是发生在大招期间，从而因为治疗多出了5.6层，然后芙芙提前治疗了一次，多出了5.6层
				---> 所以，稍微延迟一下夜兰开大的时机(100ms, 最好是200ms更稳)，能更快地叠层，但这并不好控制，叠得也不是太多，不必刻意控制
				---> 轴往后延200ms还有一个好处：能在切白芙三小只消失前让夫人扣一次血，增加叠层1.6 * 3.5 * 4 = 22.4，芙芙还可能会治疗一下自已，22.4 + 5.6 = 28层
						22.4 * 0.35% = 7.84%
						28 * 0.35% = 9.8%  * 15307 = 1500，会让第三刀多出2.7%的伤害，越往后这1500血带来的收益会降低
				---> 一个比较自然的延轴的方式是：e之后闪避一下再开砍，不过要测试一下闪避花费的时间，如果太长，会导致至少两个结果：
							---> 勋爵扣血时夜兰在开大，导致扣不了夜兰的血，直接损失 2.4 * 3.5 * 2 = 16.8
							---> 可能会导致在满命buff消失前打不满六刀
* uiyo7432因为第三刀重击后被怪打了5505的血，多叠33.96 * 2层，换算之下，相当于多了22.911%的额外生命
* awbw5598第四刀后也被怪打了2114的血，多叠12.5 * 2 = 25层，换算之下，相当于多了8.75%的额外生命，而且在切白芙三小只消失前，夫人极限扣了一下血
* wook8296是因为切人慢了，芙芙e后砍了三刀

q: 无任何增伤（也没有万叶的）
e: 万叶增伤

夫人：有万叶增伤，256层
勋爵：有万叶增伤，256层
螃蟹：有万叶增伤，256层

夫人：专武叠满，有夜兰四命一次加成，350层
夫人：专武叠满，有夜兰四命二次加成，11%
勋爵：专武叠满，有夜兰四命二次加成，22.2%

夫人：专武叠满，有夜兰四命二次加成，120.4%
勋爵：专武叠满，有夜兰四命二次加成，127.8%
螃蟹：专武叠满，有夜兰四命二次加成，127.8%
夫人：专武叠满，有夜兰四命二次加成，140%
夫人：专武叠满，有夜兰四命二次加成，140%

勋爵：专武叠满，有夜兰四命三次加成，140%
夫人：专武叠满，有夜兰四命三次加成，140%
螃蟹：专武叠满，有夜兰四命三次加成，140%

夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失
勋爵：专武叠满，有夜兰四命三次加成，芙芙大招效果消失
夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失

夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效
勋爵：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效
螃蟹：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效，减抗失效
夫人：专武叠满，有夜兰四命三次加成，芙芙大招效果消失，万叶增伤失效，减抗失效

## 三小只扣血时机研究

要注意，角色开大期间是无敌的，不会被三小只扣血，

夜兰开大《开始~结束时间》是要记录的，这期间不夜兰扣血

### 夫人

行动模式：攻击后会后退一些，达到一定距离后不会再后退

00:00:07.169：扣血
00:00:07.719：出伤 +0.55
00:00:08.802：扣血（可能提前一点）距离上次扣血+1.633
00:00:09.369：出伤 +0.567 距离上次出伤 +1.65
00:00:10.369：扣血（可能提前一点) +1.567
00:00:10.886：出伤 +0.517 +1.517
00:00:11.886：扣血 +1.517
00:00:12.604：出伤 +0.718 +1.718
00:00:13.487：扣血 +1.601
00:00:14.254：出伤 +0.767 +1.65
00:00:15.087：扣血 +1.6
00:00:15.737：出伤 +0.65 +1.483
00:00:16.654：扣血 +1.567
00:00:17.354：出伤 +0.7 +1.617
00:00:18.287：扣血 +1.633
00:00:18.937：出伤 +0.65 +1.583
00:00:19.754：扣血 +1.467
00:00:20.472：出伤 +0.718 +1.535

扣血间隔：1.633, 1.567, 1.517, 1.601, 1.6, 1.567, 1.633, 1.467
出伤-扣血间隔：0.55, 0.567, 0.517, 0.718, 0.767, 0.65, 0.7, 0.65, 0.718
出伤间隔：1.65, 1.517, 1.718, 1.65, 1.483, 1.617, 1.583, 1.535

---

00:00:06.627：扣血
00:00:07.076：出伤 +0.449
00:00:08.227：扣血 +1.6
00:00:08.761：出伤 +0.534 +1.685
00:00:09.877：扣血 +1.65
00:00:10.444：出伤 +0.567 +1.683
00:00:11.477：扣血 +1.6
00:00:11.979：出伤 +0.502 +1.535
00:00:12.912：扣血 +1.453
00:00:13.496：出伤 +0.584 +1.517
00:00:14.529：扣血 +1.617
00:00:15.129：出伤 +0.6 +1.633
00:00:16.079：扣血 +1.55
00:00:16.796：出伤 +0.717 +1.667
00:00:17.679：扣血 +1.6
00:00:18.346：出伤 +0.667 +1.55
00:00:19.279：扣血 +1.6
00:00:19.929：出伤 +0.65 +1.583

扣血间隔：1.6, 1.65, 1.6, 1.453, 1.617, 1.55, 1.6, 1.6
出伤-扣血间隔：0.449, 0.534, 0.567, 0.502, 0.584, 0.6, 0.717, 0.667, 0.65
出伤间隔：1.685, 1.683, 1.535, 1.517, 1.633, 1.667, 1.55, 1.583

从这两个案例来看，扣血间隔是相对比较稳定的，特别是第二个案例，1.6秒

扣血间隔汇总：1.633, 1.567, 1.517, 1.601, 1.6, 1.567, 1.633, 1.467,1.6, 1.65, 1.6, 1.453, 1.617, 1.55, 1.6, 1.6, 
1.517, 1.533, 1.585, 1.7, 1.6, 1.584, 1.516, 1.635, 1.584,
1.517, 1.65, 1.552, 1.516, 1.617, 1.617, 1.516, 1.469, 1.683,
1.617, 1.6, 1.618, 1.632, 1.568, 1.65, 1.6, 1.468, 1.617, 1.667, 1.483,
1.6, 1.518, 1.6, 1.517, 1.467, 1.616, 1.552, 1.55, 1.583, 1.567, 1.533
排序：[1.453, 1.467, 1.467, 1.468, 1.469, 1.483, 1.516, 1.516, 1.516, 1.517, 1.517, 1.517, 1.517, 1.518, 1.533, 1.533, 1.55, 1.55, 1.552, 1.552, 1.567, 1.567, 1.567, 1.568, 1.583, 1.584, 1.584, 1.585, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.601, 1.616, 1.617, 1.617, 1.617, 1.617, 1.617, 1.618, 1.632, 1.633, 1.633, 1.635, 1.65, 1.65, 1.65, 1.667, 1.683, 1.7]
        数量：56
        最大：1.7， +0.124
        最小：1.453， -0.123
        平均：1.576
        最大-最小平均：1.577
        最大-最小-平均-差值: 0.123
        最小-最大范围：[1.453, 1.7]
        quantile range:  (1.397, 1.749)
        2-sigma range:  (1.46, 1.692)
        3-sigma range:  (1.402, 1.75)
出伤-扣血间隔汇总：0.55, 0.567, 0.517, 0.718, 0.767, 0.65, 0.7, 0.65, 0.718, 0.449, 0.534, 0.567, 0.502, 0.584, 0.6, 0.717, 0.667, 0.65,
0.366, 0.383, 0.45, 0.367, 0.484, 0.45, 0.518, 0.484, 0.55, 0.602, 0.617, 0.582,
0.434, 0.333, 0.367, 0.385, 0.416, 0.45, 0.482, 0.566, 0.569, 0.633, 0.467,
0.349, 0.45, 0.417, 0.366, 0.401, 0.5, 0.485, 0.567, 0.633, 0.568, 0.65, 0.65, 0.583, 0.583,
0.383, 0.432, 0.367, 0.5, 0.467, 0.433, 0.5, 0.55, 0.55, 0.583, 0.45, 0.517, 0.617
排序:  [0.333, 0.349, 0.366, 0.366, 0.367, 0.367, 0.367, 0.383, 0.383, 0.385, 0.401, 0.416, 0.417, 0.432, 0.433, 0.434, 0.449, 0.45, 0.45, 0.45, 0.45, 0.45, 0.467, 0.467, 0.482, 0.484, 0.484, 0.485, 0.5, 0.5, 0.5, 0.502, 0.517, 0.517, 0.518, 0.534, 0.55, 0.55, 0.55, 0.55, 0.566, 0.567, 0.567, 0.567, 0.568, 0.569, 0.582, 0.583, 0.583, 0.583, 0.584, 0.6, 0.602, 0.617, 0.617, 0.633, 0.633, 0.65, 0.65, 0.65, 0.65, 0.65, 0.667, 0.7, 0.717, 0.718, 0.718, 0.767]
        数量：68
        最大：0.767， +0.243
        最小：0.333， -0.191
        平均：0.524
        最大-最小平均：0.55
        最大-最小-平均-差值: 0.217
        最小-最大范围：[0.333, 0.767]
        quantile range:  (0.241, 0.796)
        2-sigma range:  (0.314, 0.734)
        3-sigma range:  (0.209, 0.838)
			
出伤间隔汇总：1.65, 1.517, 1.718, 1.65, 1.483, 1.617, 1.583, 1.535,1.685, 1.683, 1.535, 1.517, 1.633, 1.667, 1.55, 1.583,
1.434, 1.65, 1.551, 1.768, 1.566, 1.65, 1.568, 1.65, 1.549,
1.551, 1.668, 1.583, 1.55, 1.649, 1.701, 1.519, 1.533, 1.517,
1.566, 1.635, 1.717, 1.617, 1.65, 1.716, 1.535, 1.55, 1.617, 1.6, 1.483,
1.535, 1.651, 1.567, 1.483, 1.534, 1.666, 1.552, 1.583, 1.45, 1.634, 1.633
排序:  [1.434, 1.45, 1.483, 1.483, 1.483, 1.517, 1.517, 1.517, 1.519, 1.533, 1.534, 1.535, 1.535, 1.535, 1.535, 1.549, 1.55, 1.55, 1.55, 1.551, 1.551, 1.552, 1.566, 1.566, 1.567, 1.568, 1.583, 1.583, 1.583, 1.583, 1.6, 1.617, 1.617, 1.617, 1.633, 1.633, 1.634, 1.635, 1.649, 1.65, 1.65, 1.65, 1.65, 1.65, 1.65, 1.651, 1.666, 1.667, 1.668, 1.683, 1.685, 1.701, 1.716, 1.717, 1.718, 1.768]
        数量：56
        最大：1.768， +0.174
        最小：1.434， -0.16
        平均：1.594
        最大-最小平均：1.601
        最大-最小-平均-差值: 0.167
        最小-最大范围：[1.434, 1.768]
        quantile range:  (1.362, 1.822)
        2-sigma range:  (1.448, 1.739)
        3-sigma range:  (1.375, 1.812)

### 勋爵

00:00:07.169：扣血
00:00:08.119：出伤 +0.95
00:00:10.436：扣血 +3.267
00:00:11.286：出伤 +0.85 +3.167
00:00:13.687：扣血 +3.251
00:00:14.687：出伤 +1 +3.401
00:00:17.054：扣血 +3.367
00:00:17.986：出伤 +0.932 +3.299
00:00:20.272：扣血 +3.218
00:00:21.139：出伤 +0.867 +3.153

扣血间隔：3.267, 3.251, 3.367,  3.218,
出伤-扣血间隔：0.95, 0.85, 1, 0.932, 0.867
出伤间隔：3.167, 3.401, 3.299, 3.153
---

00:00:06.644：扣血
00:00:07.561：出伤 +0.917
00:00:09.977：扣血 +3.333
00:00:10.861：出伤 +0.884 +3.3
00:00:13.312：扣血 +3.335
00:00:14.263：出伤 +0.951 +3.402
00:00:16.512：扣血 +3.2
00:00:17.446：出伤 +0.934 +3.183
00:00:19.762：扣血 +3.25
00:00:20.647：出伤 +0.885 +3.201

扣血间隔：3.333， 3.335， 3.2， 3.25
出伤-扣血间隔: 0.917, 0.884, 0.951, 0.934, 0.885
出伤间隔：3.3, 3.401, 3.183, 3.201

扣血间隔在3.2~3.333，相对较稳定

扣血间隔汇总：3.267, 3.251, 3.367, 3.218, 3.333,  3.335, 3.2, 3.25,
3.269, 3.4, 3.285, 3.384, 3.235,
3.285, 3.234, 3.401, 3.284, 3.218,
3.351, 3.317, 3.335, 3.2, 3.335, 3.233,
3.318, 3.166, 3.318, 3.301, 3.25
排序:  [3.166, 3.2, 3.2, 3.218, 3.218, 3.233, 3.234, 3.235, 3.25, 3.25, 3.251, 3.267, 3.269, 3.284, 3.285, 3.285, 3.301, 3.317, 3.318, 3.318, 3.333, 3.335, 3.335, 3.335, 3.351, 3.367, 3.384, 3.4, 3.401]
        数量：29
        最大：3.401， +0.113
        最小：3.166， -0.122
        平均：3.288
        最大-最小平均：3.284
        最大-最小-平均-差值: 0.117
        最小-最大范围：[3.166, 3.401]
        quantile range:  (3.085, 3.485)
        2-sigma range:  (3.164, 3.411)
        3-sigma range:  (3.103, 3.473)
出伤-扣血间隔汇总：0.95, 0.85, 1, 0.932, 0.867,0.917, 0.884, 0.951, 0.934, 0.885,
0.8, 0.866, 0.816, 0.785, 0.867, 0.833, 0.783,
0.766, 0.799, 0.767, 0.885, 0.817, 0.733, 0.8,
0.749, 0.867, 0.8, 0.901, 0.732, 0.883, 0.866, 0.9,
0.85, 0.851, 0.817, 0.684, 0.918, 0.868, 0.784, 0.75
排序:  [0.684, 0.732, 0.733, 0.749, 0.75, 0.766, 0.767, 0.783, 0.784, 0.785, 0.799, 0.8, 0.8, 0.8, 0.816, 0.817, 0.817, 0.833, 0.85, 0.85, 0.851, 0.866, 0.866, 0.867, 0.867, 0.867, 0.868, 0.883, 0.884, 0.885, 0.885, 0.9, 0.901, 0.917, 0.918, 0.932, 0.934, 0.95, 0.951, 1]
        数量：40
        最大：1， +0.157
        最小：0.684， -0.159
        平均：0.843
        最大-最小平均：0.842
        最大-最小-平均-差值: 0.158
        最小-最大范围：[0.684, 1]
        quantile range:  (0.66, 1.02)
        2-sigma range:  (0.704, 0.981)
        3-sigma range:  (0.635, 1.05)

出伤间隔汇总：3.167, 3.401, 3.299, 3.153, 3.3, 3.401, 3.183, 3.201,
3.335, 3.369, 3.367, 3.35, 3.185,
3.352, 3.333, 3.2, 3.285,
3.469, 3.418, 3.166, 3.351, 3.318, 3.267,
3.185, 3.4, 3.268, 3.217, 3.216
排序:  [3.153, 3.166, 3.167, 3.183, 3.185, 3.185, 3.2, 3.201, 3.216, 3.217, 3.267, 3.268, 3.285, 3.299, 3.3, 3.318, 3.333, 3.335, 3.35, 3.351, 3.352, 3.367, 3.369, 3.4, 3.401, 3.401, 3.418, 3.469]
        数量：28
        最大：3.469， +0.178
        最小：3.153， -0.138
        平均：3.291
        最大-最小平均：3.311
        最大-最小-平均-差值: 0.158
        最小-最大范围：[3.153, 3.469]
        quantile range:  (2.966, 3.59)
        2-sigma range:  (3.112, 3.47)
        3-sigma range:  (3.023, 3.56)


### 螃蟹

00:00:07.152：扣血
00:00:08.119：出伤 +0.967
00:00:12.404：扣血 +5.252
00:00:13.337：出伤 +0.933 +5.218
00:00:17.504：扣血 +5.1
00:00:18.537：出伤 +1.033 +5.2

扣血间隔：5.252， 5.1
出伤-扣血间隔：0.967, 0.933, 1.033
出伤间隔：5.218, 5.2
---

00:00:06.627：扣血
00:00:07.561：出伤 +0.934
00:00:11.794：扣血 +5.167
00:00:12.729：出伤 +0.935 +5.168
00:00:16.996：扣血 +5.202
00:00:17.929：出伤 +0.933 +5.2

扣血间隔：5.167, 5.202
出伤-扣血间隔：0.934, 0.935, 0.933
出伤间隔：5.168, 5.2

扣血间隔汇总：5.252, 5.1,5.167, 5.202, 5.235, 5.267, 5.118, 5.134, 5.135, 5.252, 5.166, 5.085, 5.302, 5.016, 5.152
排序:  [5.016, 5.085, 5.1, 5.118, 5.134, 5.135, 5.152, 5.166, 5.167, 5.202, 5.235, 5.252, 5.252, 5.267, 5.302]
        数量：15
        最大：5.302， +0.13
        最小：5.016， -0.156
        平均：5.172
        最大-最小平均：5.159
        最大-最小-平均-差值: 0.143
        最小-最大范围：[5.016, 5.302]
        quantile range:  (4.949, 5.421)
        2-sigma range:  (5.02, 5.324)
        3-sigma range:  (4.944, 5.401)
出伤-扣血间隔汇总：0.967, 0.933, 1.033,0.934, 0.935, 0.933, 
0.717, 0.816, 0.934, 0.867, 
0.85, 0.95, 0.915, 0.95, 
0.683, 0.8, 0.816, 0.867, 0.95,
0.783, 0.917, 0.8, 0.985, 0.883
排序:  [0.683, 0.717, 0.783, 0.8, 0.8, 0.816, 0.816, 0.85, 0.867, 0.867, 0.883, 0.915, 0.917, 0.933, 0.933, 0.934, 0.934, 0.935, 0.95, 0.95, 0.95, 0.967, 0.985, 1.033]
        数量：24
        最大：1.033， +0.149
        最小：0.683， -0.201
        平均：0.884
        最大-最小平均：0.858
        最大-最小-平均-差值: 0.175
        最小-最大范围：[0.683, 1.033]
        quantile range:  (0.632, 1.124)
        2-sigma range:  (0.716, 1.053)
        3-sigma range:  (0.631, 1.137)
			
出伤间隔汇总：5.218, 5.2, 5.168, 5.2,
5.353, 5.2,
5.218, 5.099, 5.17,
5.268, 5.217, 5.168,
5.185, 5.201, 5.05
排序:  [5.05, 5.099, 5.168, 5.168, 5.17, 5.185, 5.2, 5.2, 5.2, 5.201, 5.217, 5.218, 5.218, 5.268, 5.353]
        数量：15
        最大：5.353， +0.159
        最小：5.05， -0.144
        平均：5.194
        最大-最小平均：5.201
        最大-最小-平均-差值: 0.152
        最小-最大范围：[5.05, 5.353]
        quantile range:  (5.097, 5.289)
        2-sigma range:  (5.063, 5.325)
        3-sigma range:  (4.998, 5.391)

## 芙芙满命治疗特点

只在每秒节点开始的时候治疗，一旦这个点过去了再扣血，就需要等下一轮了

总结：其他三个角色先治疗，芙芙不论是在前台还是后台，都是最后治疗，落后0.066~0.2秒
从XQJA6856那个视频来看，即便是其他三个角色，也可能会分先后，但不论如何，芙芙永远是最后一个

其他三个角色：每次治疗开始时治疗，此后如果再扣血，不会再治疗，如果在治疗点是满血的，这轮治疗就错过了
芙芙：如果在前台时满血错过治疗，窗口期内如果掉血了，会立即治疗(0.1~0.2秒延迟），而且此后是基于这个治疗点每隔一秒进行治疗的，就像是芙芙会wait()
			但如果是在后台，则仍然像其他三人一样的机制
			UIYO7432.mp4这个视频很好地解释了这一机制
			
fixme: 其他人站前台，是不是治疗机制也有不同？
				这个要怎么测？ 吃料理会触发芙芙天赋，不好测试，如果让白芙来奶，时机不好把握。。。。。。
				
				（CWFT7636）
				00:00:07.488：治疗夜兰
				00:00:08.419：治疗夜兰
				00:00:09.436：治疗夜兰
				00:00:10.469：治疗夜兰
				【切白芙】
				【切夜兰到前台】
				00:00:10.985：众水的歌者治疗夜兰
				【切夜兰到后台，芙芙切为黑芙，让三小只出来扣血
				00:00:11.419：治疗后台
				【切夜兰到前台】
				00:00:13.771：夜兰扣血
				00:00:14.454：治疗夜兰
				00:00:15.421：治疗夜兰
				
				由此 可见，夜兰并没有芙芙那样的机制
				
				芙芙在后台时
				
				00:00:11.702：满命治疗芙芙
				00:00:12.571：众水的歌者治疗芙芙，奶满
				【切黑芙】
				【把芙芙切到后台】
				00:00:14.671：扣血，可以看到后台芙芙头像上治疗动画不久就出来了
				00:00:15.137：治疗前台夜兰
				00:00:15.687：满命治疗芙芙
				00:00:16.187：治疗钟离、夜兰
				
				由此可见，芙芙不论是在前台还是后台，满命效果的运行机制都比较特殊
				

算法：
- 到了治疗时间，治疗后台三人
- 治疗后台三人结束后，芙芙再治疗自身

00:00:07.102：第一刀
00:00:07.502：第二刀
00:00:08.119：第三刀

治疗持续时间：2.9 * 3 = 8.7秒，预计停止治疗时间为15.802
总计治疗了8次

00:00:08.302：治疗后台三人 +1.2
00:00:08.402：芙芙治疗 +0.1

00:00:09.236：治疗后台三人 +0.934
00:00:09.352：芙芙治疗 +0.116

00:00:10.302：治疗后台三人 +1.066
00:00:10.369：窗口期间扣血了，马上治疗

00:00:11.219：治疗后台三人 +0.917
00:00:11.386：芙芙治疗 +0.167

00:00:12.187：治疗后台三人 +0.968
00:00:12.304：芙芙治疗 +0.117

00:00:13.187：治疗后台三人 +1
00:00:13.337：芙芙治疗 +0.15

00:00:14.254：治疗后台三人 +1.067
00:00:14.337：芙芙治疗 +0.083

00:00:15.187：治疗后台三人 +0.933
00:00:15.287：芙芙治疗 +0.1

预计：16.287 - 7.102 = 9.185 - 8.7 = 0.458

首次治疗：1.2
治疗间隔：0.934， 1.066， 0.917， 0.968， 1， 1.067， 0.933
芙芙延迟：0.1， 0.116， 0.167， 0.117， 0.15， 0.083， 0.1

---

00:00:06.644：第一刀
00:00:07.044：第二刀
00:00:07.644：第三刀

00:00:07.861：治疗后台三人 +1.217
00:00:07.944：芙芙治疗 +0.083

00:00:08.861：治疗后台三人 +1
00:00:08.927：芙芙治疗 +0.066

00:00:09.894：即时治疗

00:00:10.761：治疗后台三人 avg+0.95
00:00:10.961：芙芙治疗 +0.2

00:00:11.811：治疗后台三人 +1.05
00:00:11.877：芙芙治疗 + 0.066

00:00:12.729：治疗后台三人 +0.918

00:00:13.679：治疗后台三人 +0.95
00:00:13.879：芙芙治疗 +0.2

00:00:14.729：治疗后台三人 +1.05
00:00:14.879：芙芙治疗 +0.15

15.729 - 6.644 = 9.085 - 8.7 = 0.385

首次治疗：1.217
治疗间隔：1， 0.95， 1.05， 0.918， 0.95， 1.05
芙芙延迟：0.083， 0.066， 0.2， 0.066， 0.2， 0.15

---

00:00:05.919：第一刀
00:00:06.236：第二刀
00:00:06.951：第三刀

00:00:07.086：治疗后台三人 +1.167
00:00:07.186：芙芙治疗，+0.1

00:00:08.068：治疗后台三人，+0.982
00:00:08.186：芙芙治疗，+0.118

00:00:09.086：治疗后台三人，+1.018
《芙芙满血无需治疗》

00:00:09.935：治疗后台三人，+0.849
00:00:10.136：芙芙治疗，+0.201

00:00:10.951：治疗后台三人，+1.016
00:00:11.169：芙芙治疗，+0.218

00:00:11.935：治疗后台三人，+0.984
00:00:12.069：芙芙治疗，+0.134

00:00:12.921：治疗后台三人，+0.986
00:00:13.07：芙芙治疗，+0.149

【中间有一轮在治疗点都是满血，所以跳过了】

00:00:14.89：这个时间点左右治疗了其他三个角色 +1.969
《但芙芙一直没有被治疗》

首次治疗：1.167
治疗间隔：0.982， 1.018， 0.849， 1.016， 0.984， 0.986
芙芙延迟：0.1， 0.118， 0.201， 0.218， 0.134， 0.149

特点：第一刀后1.2秒后开始治疗，再以后一秒治疗一次，前台似乎有着不一样的算法

首次治疗汇总：1.2, 1.217, 1.167, 1.116, 1.133, 1.134, 1.266
排序:  [1.116, 1.133, 1.134, 1.167, 1.2, 1.217, 1.266]
        数量：7
        最大：1.266， +0.09
        最小：1.116， -0.06
        平均：1.176
        最大-最小平均：1.191
        最大-最小-平均-差值: 0.075
        最小-最大范围：[1.116, 1.266]
        quantile range:  (1.021, 1.32)
        2-sigma range:  (1.076, 1.277)
        3-sigma range:  (1.025, 1.327)

治疗间隔汇总： 0.934, 1.066, 0.917, 0.968, 1, 1.067, 0.933, 1, 0.95, 1.05, 0.918, 0.95, 1.05, 0.982, 1.018, 1.016, 0.984, 0.986, 1, 1.035,1, 0.967, 0.968, 1.015, 1.067, 1.017, 1.033, 0.967, 0.933, 1.035, 0.95, 1.017, 0.916, 1, 1.034, 0.916, 1.05, 0.985, 1, 0.967, 1,
0.967, 1.066, 0.984,
0.983,
1.017, 1.017, 0.95,
0.984, 1.017,  1.02
排序:  [0.916, 0.916, 0.917, 0.918, 0.933, 0.933, 0.934, 0.95, 0.95, 0.95, 0.967, 0.967, 0.967, 0.967, 0.968, 0.968, 0.982, 0.984, 0.984, 0.985, 0.986, 1, 1, 1, 1, 1, 1, 1, 1.015, 1.016, 1.017, 1.017, 1.018, 1.033, 1.034, 1.035, 1.035, 1.05, 1.05, 1.05, 1.066, 1.066, 1.067, 1.067]
        数量：44
        最大：1.067， +0.074
        最小：0.916， -0.077
        平均：0.993
        最大-最小平均：0.992
        最大-最小-平均-差值: 0.075
        最小-最大范围：[0.916, 1.067]
        quantile range:  (0.884, 1.104)
        2-sigma range:  (0.905, 1.081)
        3-sigma range:  (0.861, 1.125)

芙芙延迟汇总：0.116, 0.167, 0.117, 0.15, 0.083, 0.1,0.083, 0.066, 0.2, 0.066, 0.2, 0.15, 0.118, 0.201, 0.218, 0.134, 0.149,0.1, 0.084, 0.05, 0.1, 0.199, 0.15, 0.217,0.1, 0.1, 0.167, 0.05, 0.117, 0.1, 0.117,0.083, 0.134, 0.066, 0.184, 0.1, 0.1, 0.1, 0.132,
0.067, 0.083,
0.1, 0.167,
0.034, 0.083, 0.133
排序:  [0.05, 0.05, 0.066, 0.066, 0.066, 0.083, 0.083, 0.083, 0.084, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.116, 0.117, 0.117, 0.117, 0.118, 0.132, 0.134, 0.134, 0.149, 0.15, 0.15, 0.15, 0.167, 0.167, 0.184, 0.199, 0.2, 0.2, 0.201, 0.217, 0.218]
        数量：39
        最大：0.218， +0.093
        最小：0.05， -0.075
        平均：0.125
        最大-最小平均：0.134
        最大-最小-平均-差值: 0.084
        最小-最大范围：[0.05, 0.218]
        quantile range:  (0.025, 0.225)
        2-sigma range:  (0.032, 0.218)
        3-sigma range:  (-0.014, 0.264)

			
第一刀 ~~~ 最后一次治疗的总时长：
00:00:07.102 ~~ 00:00:15.287：8.185
	第一刀 ~ 第一次治疗： 1.2
00:00:06.644 ~~ 00:00:14.879：8.235
	第一刀 ~ 第一次治疗：1.217
00:00:07.586 ~~ 00:00:15.704：8.118
	第一刀 ~ 第一次治疗：1.15
下面是比较极限的，估计更准确些
00:00:05.919 ~ 00:00:14.89：8.971【这个因为满血跳过了一次】
	第一刀 ~ 第一次治疗：1.167
00:00:06.702 ~ 00:00:15.871：9.169 - 8.7 = 0.469
	第一刀 ~ 第一次治疗：1.2
00:00:09.136 ~ 00:00:18.171：9.038 - 8.7 = 0.338
	第一刀 ~ 第一次治疗：1.066

从治疗时来来看，qe后只需要a一下是最高效的，只浪费一次治疗
如果使用qeaa，则会浪费两次治疗，而且第二刀吃到的增伤也少


## 众水的歌者分析

理论上，芙芙4w血时，1.68秒治疗一次

### OJZB2175

00:00:07.736：重击前摇开始
00:00:08.269：三小只消失，歌者差不多也同时被召唤出来
							8.269 - 7.736 = 0.533
00:00:09.436：第一次治疗
							9.436 - 8.269 = 1.167
00:00:11.101：第二次治疗，11.101 - 9.436 =		1.665
00:00:12.771：第三次治疗，12.771 - 11.101 = 	1.67
00:00:14.487：第四次治疗，14.487 - 12.771 = 	1.716
00:00:16.204：第五次治疗，16.204 - 14.487 = 	1.717

00:00:19.686：切钟离出来后，治疗，19.686 - 16.204 = 3.482 / 2 = 1.741

### TECM6082

00:00:03.417：重击前摇开始
00:00:03.950：三小只开始消失，歌者开始出来
							3.950 - 3.417  = 0.533
00:00:05.053：治疗
							5.053 - 3.950 = 1.103
00:00:06.719：治疗，6.719 - 5.053 = 		1.666
00:00:08.503：治疗，8.503 - 6.719 = 		1.784
00:00:10.202：治疗，10.202 - 8.503 = 		1.699
00:00:12.037：治疗, 12.037 - 10.202 = 		1.835

00:00:17.121：治疗, 17.121 - 12.037 = 5.084 /1.68 = 3，规律性很强！
00:00:18.887：治疗，18.887 - 17.121 = 1.766
00:00:20.506：治疗，20.506 - 18.887 = 1.619
00:00:22.222：治疗，22.222 - 20.506 = 1.716
00:00:23.989：治疗，23.989 - 22.222 = 1.767

00:00:27.306：治疗，27.306 - 23.989 = 3.317 / 1.68 = 1.974

### SRRA8913

00:00:03.651：重击前摇开始
00:00:04.186：三小只开始消失，歌者开始出来
							4.186 - 4.651 = 0.535
00:00:05.236：治疗，5.236 - 4.186 = 	1.05
00:00:06.951：治疗，6.951 - 5.236 = 	1.715
00:00:08.769：治疗，8.769 - 6.951 = 	1.818
00:00:10.419：治疗，10.419 - 8.769 = 	1.65

00:00:12.137：治疗，12.137 - 10.419 = 1.718
00:00:13.804：治疗，13.804 - 12.137 = 1.667
00:00:15.521：治疗，15.521 - 13.804 = 1.717
00:00:17.237：治疗，17.237 - 15.521 = 1.716
00:00:18.904：治疗，18.904 - 17.237 = 1.667

00:00:20.721：治疗，20.721 - 18.904 = 1.817
00:00:22.389：治疗，22.389 - 20.721 = 1.668
00:00:24.006：治疗，24.006 - 22.389 = 1.617
00:00:25.738：治疗，25.738 - 24.006 = 1.732

00:00:27.406：治疗，27.406 - 25.738 = 1.668
歌者消失

### CPKZ3950

00:00:04.136：重击前摇开始
00:00:04.669：三小只开始消失，歌者开始出来
							4.669 -  4.136 = 0.533
00:00:05.819：治疗，5.819 - 4.669 = 			1.15
00:00:07.819：治疗，7.819 - 5.819 = 			2
00:00:09.502：治疗，9.502 - 7.819 = 			1.683
00:00:11.202：治疗，11.202 - 9.502 = 			1.7
00:00:12.904：治疗，12.904 - 11.202 =		 1.704

00:00:14.687：治疗，14.687 - 12.904 =		1.783
00:00:16.304：治疗，16.304 - 14.687 = 		1.617
00:00:18.004：治疗，18.004 - 16.304 = 		1.7
00:00:19.704：治疗，19.704 - 18.004 = 		1.7
00:00:21.422：治疗，21.422 - 19.704 = 		1.718

00:00:23.089：治疗，23.089 - 21.422 = 		1.667
00:00:24.856：治疗，24.856 - 23.089 = 		1.767
00:00:26.522：治疗，26.522 - 24.856 = 		1.666

### PIPN1049

00:00:11.119：重击前摇开始
00:00:11.652：三小只开始消失，歌者开始出来
							11.652 - 11.119 = 0.533
00:00:12.804：治疗，12.804 - 11.652 = 1.152
00:00:14.471：治疗，14.471 - 12.804 = 1.667
00:00:16.204：治疗，16.204 - 14.471 = 1.733
00:00:17.904：治疗，17.904 - 16.204 = 1.7

00:00:19.537：治疗，19.537 - 17.904 = 1.633
00:00:21.289：治疗，21.289 - 19.537 = 1.752
00:00:22.972：治疗，22.972 - 21.289 = 1.683
00:00:24.672：治疗，24.672 - 22.972 = 1.7
00:00:26.389：治疗，26.389 - 24.672 = 1.717

### IJDS3544

00:00:05.086：重击前摇开始
00:00:05.636：三小只开始消失，歌者开始出来
							5.636 - 5.086 = 0.55
00:00:06.769：治疗，6.769 - 5.636 = 1.133
00:00:08.502：治疗，8.502 - 6.769 = 		1.733
00:00:10.119：治疗，10.119 - 8.502 = 		1.617
00:00:11.837：治疗，11.837 - 10.119 = 	1.718
00:00:13.521：治疗，13.521 - 11.837 = 	1.684

00:00:17.004：治疗，17.004 - 13.521 = 3.483 / 1.68 = 2.07
00:00:18.621：治疗，18.621 - 17.004 = 1.617
00:00:20.373：治疗，20.373 - 18.621 = 1.752
00:00:22.039：治疗，22.039 - 20.373 = 1.666
00:00:23.722：治疗，23.722 - 22.039 = 1.683

00:00:30.541：治疗，30.541 - 23.722 = 6.819 / 1.68 = 4.05

### RPNB7262

00:00:05.202：重击前摇开始
00:00:05.752：三小只开始消失，歌者开始出来
							5.752 - 5.202 = 0.55
00:00:06.802：治疗，6.802 - 5.752 = 1.05
00:00:08.602：治疗，8.602 - 6.802 = 		1.8
00:00:10.219：治疗，10.219 - 8.602 = 		1.617
00:00:11.935：治疗，11.935 - 10.219 = 	1.716
00:00:13.704：治疗，13.704 - 11.935 = 	1.769

00:00:15.354：治疗，15.354 - 13.704 = 1.65
00:00:17.071：治疗，17.071 - 15.354 = 1.717
00:00:18.804：治疗，18.804 - 17.071 = 1.733
00:00:20.422：治疗，20.422 - 18.804 = 1.618
00:00:22.139：治疗，22.139 - 20.422 = 1.717

00:00:23.889：治疗，23.889 - 22.139 = 1.75
00:00:25.606：治疗，25.606 - 23.889 = 1.717
00:00:27.306：治疗，27.306 - 25.606 = 1.7
00:00:28.988：治疗，28.988 - 27.306 = 1.682

00:00:30.641：治疗，30.641 - 28.988 = 1.653

### EZEE0311

00:00:03.159：重击前摇开始
00:00:03.709：三小只开始消失，歌者开始出来
							3.709 - 3.159 = 0.55
00:00:04.777：治疗，4.777 - 3.709 = 1.068
00:00:06.477：治疗，6.477 - 4.777 = 	1.7
00:00:08.161：治疗，8.161 - 6.477 = 	1.684
00:00:09.877：治疗，9.877 - 8.161 = 	1.716
00:00:11.577：治疗，11.577 - 9.877 = 	1.7

00:00:14.979：治疗，14.979 - 11.577 = 3.402
00:00:16.679：治疗，16.679 - 14.979 = 1.7
00:00:18.362：治疗，18.362 - 16.679 = 1.683
00:00:20.081：治疗，20.081 - 18.362 = 1.719
00:00:21.931：治疗，21.931 - 20.081 = 1.85

00:00:23.464：治疗，23.464 - 21.931 = 1.533, 23.464 - 20.081 = 3.383，这里为什么会出现这种情况呢？
00:00:25.181：治疗，25.181 - 23.464 = 1.717
00:00:26.897：治疗，26.897 - 25.181 = 1.716
00:00:28.566：治疗，28.566 - 26.897 = 1.669


首次治疗时间汇总：1.167, 1.103, 1.05, 1.15, 1.152, 1.133, 1.05, 1.068
        数量：8
        最大：1.167， +0.058
        最小：1.05， -0.059
        平均：1.109
        最大-最小平均：1.109
        最大-最小-平均-差值: 0.058
        最小-最大范围：[1.05, 1.167]
        quantile range:  (0.932, 1.28)
        2-sigma range:  (1.019, 1.199)
        3-sigma range:  (0.974, 1.244)
治疗间隔汇总：
[1.533, 1.617, 1.617, 1.617, 1.617, 1.617, 1.618, 1.619, 1.633, 1.65, 1.65, 1.653, 1.665, 1.666, 1.666, 1.666, 1.667, 1.667, 1.667, 1.667, 1.668, 1.668, 1.669, 1.67, 1.682, 1.683, 1.683, 1.683, 1.683, 1.684, 1.684, 1.699, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.704, 1.715, 1.716, 1.716, 1.716, 1.716, 1.716, 1.716, 1.717, 1.717, 1.717, 1.717, 1.717, 1.717, 1.717, 1.718, 1.718, 1.718, 1.719, 1.732, 1.733, 1.733, 1.733, 1.75, 1.752, 1.752, 1.766, 1.767, 1.767, 1.769, 1.783, 1.784, 1.8, 1.817, 1.818, 1.835, 1.85, 2.0]
		第一四分位数:  1.667
		第二四分位数:  1.7
		第三四分位数:  1.719
		第一四分位数n:  1.667
		第二四分位数n:  1.7
		第三四分位数n:  1.719
		quantile range:  (1.589, 1.797)
		2-sigma range:  (1.579, 1.833)
		异常值：1.533, 1.835, 1.85, 2.0


## 芙芙大招持续时间

打挚电树时，大招状态下的普攻物理伤害，物理增伤只有芙芙开大时的1.24

第一刀：230(暴击)，61(不暴击)
第二刀：208(暴击)，55(不暴击)
第三刀：262(暴击)，69(不暴击)
第四刀：349(暴击)，92(不暴击)

### HSNA6197.mp4

00:00:03.084：开始摆大招Pose
00:00:04.736：潮湿
00:00:04.769：大招出伤
00:00:05.469：摆完pose，5.469 - 3.084 = 2.385
......
00:00:22.773：大招动画消失
							22.773 - 4.769 = 18.004
00:00:23.256：第四刀349
...
00:00:24.939：第三刀，262
00:00:25.306：从血条看，大招效果消失
							25.306 - 22.773 = 2.533，这也太离谱了吧？
00:00:25.722：第四刀155，155 * 2.24 = 347.2
								25.722 - 24.939 = 0.783

### CFUT4502.mp4

00:00:02.651：开始摆大招pose
00:00:04.302：潮湿
00:00:04.319：大招出伤
00:00:04.769：摆完pose，4.769 - 2.651 = 2.118
......
00:00:22.339：大招动画消失，22.339 - 4.319 = 18.02
......
00:00:24.472：第二刀，208
00:00:24.889：从血条看，大招效果消失
							24.889 - 22.339 = 2.55
							24.889 - 4.319 = 20.57
00:00:24.989：第三刀，117 * 2.24 = 262


### JCJS5281

下面的流程还是打挚电树，只不过芙芙不平A，只围着挚电树跑，时间就没这么离谱了，芙芙平A还能延长大招效果？

00:00:04.527：开始摆大招pose
00:00:06.160：潮湿
00:00:06.244：大招出伤
......
00:00:24.231：大招动画消失，24.231 -6.244 = 17.987
00:00:24.981：从血条看，大招效果消失
								24.981 - 6.244 = 18.737
								24.981 - 24.231 = 0.75

但其他实战中，却没有这么离谱：

### OORO3875

00:00:04.352：芙芙q出伤
00:00:22.239：芙芙大招动画消失, 22.239 - 4.352 = 17.887
00:00:22.706：芙芙大招效果消失, 22.706 - 22.239 = 0.467
							22.706 - 4.352 = 18.354

### ASGN4435

00:00:04.744：芙芙q出伤
00:00:22.781：大招动画消失，22.781 - 4.744 = 18.037
00:00:22.997：大招效果消失, 22.997 - 22.781 = 0.216
								22.997 - 4.744 = 18.253

### awbw5598

00:00:04.469：芙芙q潮湿
00:00:04.552：芙芙q出伤
00:00:22.572：芙芙大招动画消失，22.572 - 4.552 = 18.02
00:00:23.072：芙芙二命生命值效果消失
								23.072 - 22.572 = 0.5
								23.072 - 4.552 = 18.52

大招实际持续时间：18.737, 18.354, 18.253, 18.52
        数量：4
        最大：18.737, +0.271
        最小：18.253, -0.213
        平均：18.466
        最大-最小平均：18.495
        最大-最小-平均-差值: 0.242
        最小-最大范围：[18.253, 18.737]
        quantile range:  (17.959, 18.943)
        2-sigma range:  (18.1, 18.832)
        3-sigma range:  (17.916, 19.016)

## 芙芙气氛值-生命值调整分析

从视频分析的结果看，气氛值是有小数点的，不足1%的部分也会贡献气氛值

气氛值-血量调整线程大致是这样运行的：
 while True:
		data_packages = queue.get() # 一次性取出当前queue上所有的，并清空queue
		process data packages(会花费0.05~0.15秒的时间)
		sleep(0.5)

也就是说，不光有queue.get()，还有一个强制性的0.5秒等待，为什么要这样设计呢？难道是网络延迟？网越好的人会不会不用等0.5秒？
我怀疑气氛值也采用了类似的处理方式
			
其他会导致生命值上限变化的线程，例如：专武叠层，二命气氛值400以上
	将变化相关数据封包data_package
	queue.put(data_package)

00:00:05.686：芙芙点按e
00:00:07.152：螃蟹扣血(200.4层)，专武生命叠一层，生命值+14%
00:00:07.169：夫人和勋爵扣血(256.4层)，+0.017【从后面夫人出伤看，这次扣血被统计到了】
【线程运行】
00:00:07.202：2/4动画
							 生效延迟：7.202 - 7.169 = 0.033
00:00:07.236：生命值调整，专武生命叠一层生效
							 专武生效延迟：7.236 - 7.169 = 0.067
00:00:07.502：芙芙第二刀(吃到256.4层)
00:00:07.719：夫人出伤（吃到256.4层）
00:00:08.119：勋爵、螃蟹出伤，芙芙第三刀（吃到256.4层）
00:00:08.302：治疗钟离（271.08层），专武生命再叠一层+14%，专武生命值叠满
00:00:08.319：治疗夜兰、万叶（316.1层） +0.017
【线程立即运行】
00:00:08.336：3/4动画
							生效延迟：8.336 - 8.302 = 0.034
00:00:08.402：治疗芙芙（333.95层）
00:00:08.402：生命值调整，专武生命叠二层生效
							专武生效延迟：8.402 - 8.302 = 0.1
【预计8.802线程运行】
00:00:08.802：夫人扣血（356.35层）
【预计9.302线程运行，但从后面夫人只吃到356.48层看，实际可能提前到了9.236之前】
00:00:09.236：治疗后台三人（392.58层）
00:00:09.352：治疗芙芙（406.11层）
00:00:09.369：夫人伤害（吃到356.48层）
【预计9.7左右线程运行】
00:00:09.836：满层动画
00:00:09.886：生命值调整（406.12层）
【预计10.2左右线程运行，这期间没变化，进入阻塞】
00:00:10.302：钟离加血（406.79层）
【线程立即运行】
00:00:10.369：夫人扣血，治疗芙芙（434.79层）【错过本轮调整】
00:00:10.436：勋爵扣血（468.39层）【错过本轮调整】
00:00:10.436：生命值调整（406.79），10.436 - 9.886 = 0.55
							生效延迟：10.436 - 10.302 = 0.134
【预计10.802线程运行】
00:00:10.951：生命值调整（468.39层），10.951 - 10.436 = 0.515
00:00:11.219：治疗后台三人（510.39层）
【预计11.302线程运行】
00:00:11.386：治疗芙芙（518.8层）【错过本轮调整】
00:00:11.486：生命值调整（吃到510.4层），11.486 - 10.951 = 0.535
【预计11.886线程运行，从后面生命值调整是418.8看，稍微提前了些】
00:00:11.886：夫人扣血（541.2层）【错过本轮调整】
00:00:11.970：生命值调整（吃到518.8层），11.97 - 11.486 = 0.484
00:00:12.187：治疗后台三人（558层）
00:00:12.304：芙芙治疗（563.6层）
【预计12.386线程运行】
00:00:12.404：螃蟹扣血（614层）【错过本轮调整】
00:00:12.487：生命值调整（吃到563.6层），11.487 - 11.97 = 0.483
【预计12.886线程运行】
00:00:13.038：生命值调整（吃到614层），13.038 - 12.487 = 0.551
00:00:13.187：治疗后台三人（651.8层）
00:00:13.337：芙芙治疗（664.4）
【预计13.386线程运行】
00:00:13.487：生命值调整（吃到664.4层），13.487 - 13.038 = 0.449
00:00:13.687：勋爵扣血（720.4层）
【预计13.886线程运行】
00:00:13.97：生命值调整（吃到720.4层），13.97 - 13.487 = 0.483
00:00:14.254：治疗后台三人（762.4层）
00:00:14.337：芙芙治疗（776.4层）
【预计14.386线程运行】
00:00:14.487：生命值调整（吃到776.4层），14.487 - 13.97 = 0.517
【预计14.886线程运行，无变化，进入阻塞】
00:00:15.087：夫人扣血（798.8层）
【线程立即运行】
00:00:15.187：生命值调整（吃到798.81层）
							生效延迟：0.1
00:00:15.187：治疗后台三人，叠满了
【预计15.587线程运行】
00:00:15.687：生命值调整（800层），15.687 - 15.187 = 0.5
							 生效延迟：0.1
							
生命值调整间隔：0.55,  0.515, 0.484, 0.483, 0.551, 0.449, 0.483, 0.517, 0.5
生效延迟：0.033, 0.034, 0.134, 0.1, 0.1

---

00:00:05.244：芙芙点按e
00:00:06.627：夫人和螃蟹扣血（222.8层），专武生命叠一层
【线程运行】
00:00:06.644：勋爵扣血（256.4层），+0.017
00:00:06.661：2/4动画
							生效延迟：6.661 - 6.627 = 0.034
00:00:06.711：生命值调整，专武生命叠一层生效
							专武生效延迟：6.711 - 6.627 = 0.084
00:00:07.076：夫人出伤（吃到222.8层）
【预计7.127线程运行】
00:00:07.561：勋爵出伤（吃到256.4层）
00:00:07.561：螃蟹出伤（吃到256.4层）
【预计7.627线程运行，但气氛值没有变化，进入阻塞】
00:00:07.861：治疗后台三人（316.1层），专武生命叠二层
【线程立即运行】
00:00:07.877：3/4动画
							生效延迟：7.877 - 7.861 = 0.016
00:00:07.944：治疗芙芙（333.95层）
00:00:07.944：生命值调整，专武生命二层生效
							专武生效延迟：7.944 - 7.861 = 0.083
00:00:08.227：夫人扣血（356.35层）
【预计8.361线程运行】
00:00:08.761：夫人出伤（吃到356.39层）
00:00:08.861：治疗后台三人（392.58层）
【预计8.861线程运行】
00:00:08.927：治疗芙芙（406.11层）
【预计9.361线程运行】
00:00:09.411：满层动画开始
00:00:09.511：生命值调整（吃到406.12层）
00:00:09.794：钟离加血（ 406.79或409.23层）
00:00:09.877：夫人扣血（431.63层）
00:00:09.894：芙芙治疗（437.23层）
【预计9.861运行，但从后面生命值调整吃到437.5层看，实际生效延后了一点点】
00:00:09.977：勋爵扣血（470.83层）【错过本轮调整】
00:00:09.977：生命值调整（吃到437.5层），9.977 - 9.511 = 0.466
【预计10.395线程运行】
00:00:10.527：生命值调整（吃到470.82层），10.527 - 9.977 = 0.55
00:00:10.761：治疗后台三人（512.83层）
【预计10.895线程运行】
00:00:10.961：芙芙治疗（521.23层）【错过本轮调整】
00:00:11.061：生命值调整（吃到512.83层），11.061 - 10.527 = 0.534
【预计11.395线程运行】
00:00:11.477：夫人扣血（543.62层）【错过本轮调整】
00:00:11.561：生命值调整（吃到521.23层），11.561 - 11.061 = 0.5
00:00:11.793：治疗后台三人（560.42层）
00:00:11.794：螃蟹扣血后台
00:00:11.811：螃蟹扣血前台（610.82层）
00:00:11.877：芙芙治疗（629.02层）
【预计11.895线程运行】
00:00:12.062：生命值调整（吃到629.02层）12.062 - 11.561 = 0.501
【预计12.395线程运行，但没有变化，进入阻塞】
00:00:12.729：治疗后台三人（666.82层）
【线程立即运行】
00:00:12.846：生命值调整（吃到666.82层）
							生效延迟：12.846 - 12.729 = 0.117
00:00:12.912：夫人扣血（689.22层）
【预计13.229线程运行】
00:00:13.312：勋爵扣血（722.82层）【错过本轮调整】
00:00:13.312：生命值调整（689.22层）13.312 - 12.846 = 0.466
00:00:13.679：治疗后台三人（ 764.82层）
【预计13.729线程运行】
00:00:13.879：芙芙治疗（778.82层）【错过本轮调整】
00:00:13.879：生命值调整（吃到764.67层）13.879 - 13.312 = 0.567
【预计14.229线程运行】
00:00:14.329：生命值调整（吃到778.67层）14.329 - 13.879 = 0.45
00:00:14.529：夫人扣血，满层了
【预计14.729线程运行】
00:00:14.879：生命值调整，14.879 - 14.329 - 0.55

生命值调整间隔：0.466， 0.55， 0.534， 0.5， 0.501， 0.466， 0.567， 0.45
生效延迟：0.034, 0.016, 0.117

-----

00:00:06.068：三小只同时扣血（256.4层），专武生命值一层
【线程立即运行】
00:00:06.069：2/4动画
						生效延迟：0.001
00:00:06.152：生命值调整，专武生命值一层生效
						专武生效延迟：0.084
00:00:06.469：夫人出伤（吃到256.4层）
00:00:07.086：治疗后台三人（316.1层）
【线程立即运行】
00:00:07.186：治疗芙芙（ 333.95层）
00:00:07.186：生命值调整，专武生命值二层生效
							专武生效延迟：0.1
【预计7.586线程运行】
00:00:07.602：3/4动画
00:00:07.669：夫人扣血（356.35层）
00:00:08.068：治疗后台三人（392.58层）
【预计8.086线程运行】
00:00:08.186：芙芙治疗（406.11层）
00:00:08.336：夫人出伤（吃到392.3层）
【预计8.586线程运行】
00:00:08.602：满层动画
00:00:08.686：生命值调整（405.78层）
00:00:09.086：治疗钟离（406.79层）
【预计9.086线程运行】
00:00:09.236：生命值调整（吃到406.79层）9.236 - 8.686 = 0.55
00:00:09.369：夫人和勋爵同时扣血（ 462.79层）
【预计9.586线程运行】
00:00:09.669：生命值调整（吃到462.79层）9.669 - 9.236 = 0.433
00:00:09.935：治疗后台三人（504.8层）
【预计10.086线程运行】
00:00:10.136：芙芙治疗（518.8层）
00:00:10.169：生命值调整（吃到504.8层）10.169 - 9.669 = 0.5
【本来预计10.586，很明显提前了一些】
00:00:10.669：生命值调整（吃到518.8层）10.669 - 10.169 = 0.5
00:00:10.886：夫人扣血（541.2层）
00:00:10.951：治疗后台三人（558层）
【预计11.159线程运行】
00:00:11.169：芙芙治疗（563.6层）
00:00:11.219：生命值调整（吃到558层）11.219 - 10.669 = 0.55
00:00:11.269：螃蟹扣血（614层）
【预计11.659线程运行】
00:00:11.702：生命值调整（吃到614层）11.702 - 11.219 = 0.483
00:00:11.935：治疗后台三人（651.8层）
00:00:12.069：治疗芙芙（664.4层）
【预计12.159线程运行】
00:00:12.254：生命值调整（吃到664.4层）12.254 - 11.702 = 0.552
00:00:12.421：夫人扣血（686.8层）
【预计12.659线程运行】
00:00:12.704：勋爵扣血（720.4层）
00:00:12.737：生命值调整（吃到686.8层）12.737 - 12.254 = 0.483
00:00:12.921：治疗后台三人（762.4层）
00:00:13.07：治疗芙芙（776.4层）
【预计13.159线程运行】
00:00:13.271：生命值调整（吃到776.4层）13.271 - 12.737 = 0.534
【预计13.659线程运行，无变化，进入阻塞】
00:00:14.071：夫人扣血（798.8层）
【线程立即运行】
00:00:14.171：生命值调整（吃到798.8层）
							生效延迟：0.1
【预计14.571线程运行，无变化，进入阻塞】
00:00:14.89：治疗后台三人，叠满了
【线程立即运行】
00:00:15.071：生命值调整
							生效延迟：0.181
							
生命值调整间隔：0.55, 0.533, 0.5, 0.5, 0.55, 0.483, 0.552, 0.483, 0.534
生效延迟：0.01, 0.1, 0.181

-----

生命值调整间隔汇总：0.55,  0.515, 0.484, 0.483, 0.551, 0.449, 0.483, 0.517, 0.5, 0.466， 0.55， 0.534， 0.5， 0.501， 0.466， 0.567， 0.45, 0.55, 0.533, 0.5, 0.5, 0.55, 0.483, 0.552, 0.483, 0.534,
0.517, 0.499, 0.535, 0.465, 0.601, 0.466,
0.567, 0.433, 0.567, 0.45, 0.583, 0.45,
0.483, 0.5, 0.5, 0.5, 0.5, 0.571, 0.5, 0.466,
0.466, 0.483, 0.517, 0.5, 0.5, 0.466, 0.517, 0.583
排序:  [0.433, 0.449, 0.45, 0.45, 0.45, 0.465, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.483, 0.483, 0.483, 0.483, 0.483, 0.483, 0.484, 0.499, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.501, 0.515, 0.517, 0.517, 0.517, 0.517, 0.533, 0.534, 0.534, 0.535, 0.55, 0.55, 0.55, 0.55, 0.551, 0.552, 0.567, 0.567, 0.567, 0.571, 0.583, 0.583, 0.601]
        数量：54
        最大：0.601, +0.093
        最小：0.433, -0.075
        平均：0.508
        最大-最小平均：0.517
        最大-最小-平均-差值: 0.084
        最小-最大范围：[0.433, 0.601]
        quantile range:  (0.405, 0.613)
        2-sigma range:  (0.429, 0.587)
        3-sigma range:  (0.389, 0.627)
生效延迟汇总：0.134, 0.1, 0.1,  0.117,  0.1, 0.181,0.066, 0.15, 0.1, 0.1,0.15
排序:  [0.066, 0.1, 0.1, 0.1, 0.1, 0.1, 0.117, 0.134, 0.15, 0.15, 0.181]
        数量：11
        最大：0.181, +0.063
        最小：0.066, -0.052
        平均：0.118
        最大-最小平均：0.123
        最大-最小-平均-差值: 0.058
        最小-最大范围：[0.066, 0.181]
        quantile range:  (0.037, 0.205)
        2-sigma range:  (0.056, 0.18)
        3-sigma range:  (0.025, 0.211)


## 专武叠层

### 生命值叠层

测试方法：让后台三个角色损失少量生命，前台芙芙满血，快速按便携营养袋连续给后台角色加血，看芙芙生命值的变化
多次测试，测试结果如下，从最后一次的结果可以看到，芙芙的生命值叠层生效机制和气氛值不同，没有0.5秒的间隔

00:00:03.076：钟离加血
00:00:03.142：芙芙吃到一层，3.142 - 3.076 = 0.066
00:00:03.542：万叶加血
00:00:03.676：芙芙吃到两层，3.676 - 3.542 = 0.134

---

00:00:02.066：钟离加血
00:00:02.101：芙芙吃到一层，2.101 - 2.066 = 0.035
00:00:02.417：夜兰加血，2.417 - 2.066  = 0.351
00:00:02.517：芙芙吃到两层，+0.1， 2.517 - 2.101 = 0.416

---

00:00:00.601：钟离加血
00:00:00.701：芙芙吃到一层，+0.1
00:00:00.801：夜兰加血，这哈好是0.2，能生效么？
00:00:00.983：万叶加血，0.983 - 0.601 - 0.383
00:00:01.101：芙芙吃到二层，1.101 - 0.983 = 0.118， 1.101 - 0.701 = 0.4

---

00:00:02.451：钟离加血
00:00:02.567：芙芙吃到一层，+0.116
00:00:02.651：夜兰加血，2.651 - 2.451 = 0.2，又是恰好0.2
00:00:02.951：万叶加血
00:00:03.067：芙芙吃到二层，3.067 - 2.951 = 0.116

---

00:00:00.567：钟离加血
00:00:00.667：芙芙吃到一层，+0.1
00:00:00.967：夜兰加血
00:00:01.068：芙芙吃到两层，+0.101

---

00:00:00.701：钟离加血
00:00:00.784：芙芙吃到一层，+0.083
00:00:00.984：夜兰加血，+0.283，超过了专武的0.2秒判定标准
00:00:01.084：芙芙吃到二层，+0.1，1.084 - 0.784 = 0.3

这一次测试最为理想

生效延迟：0.066, 0.134, 0.035, 0.1, 0.1, 0.118, 0.116, 0.116, 0.1, 0.101, 0.083, 0.1, 0.067, 0.1, 0.084, 0.083, 0.084, 0.1, 0.066, 0.066, 0.117, 0.067
排序:  [0.035, 0.066, 0.066, 0.066, 0.067, 0.067, 0.083, 0.083, 0.084, 0.084, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.101, 0.116, 0.116, 0.117, 0.118, 0.134]
        数量：22
        最大：0.134, +0.043
        最小：0.035, -0.056
        平均：0.091
        最大-最小平均：0.085
        最大-最小-平均-差值: 0.049
        最小-最大范围：[0.035, 0.134]
        quantile range:  (0.026, 0.146)
        2-sigma range:  (0.045, 0.137)
        3-sigma range:  (0.023, 0.16)
		
		建议范围：[0.066, 0.118]

### 战技增伤叠层

第一层：三小只首次发动攻击扣芙芙血
第二层：芙芙1.3秒左右治疗自已
第三层：夫人扣血

## 满命六刀时机

第一刀：只有150层基础增伤
第二刀：
荒刀：

第三刀：
第四刀：
第五刀：
芒刀：
第六刀：

## 关于生效延迟

我怀疑所有的生效都有延迟

如果合并在一块来计算的话：

0.035, 0.066, 0.066, 0.066, 0.067, 0.067, 0.083, 0.083, 0.084, 0.084, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.101, 0.116, 0.116, 0.117, 0.118, 0.134, 0.134, 0.1, 0.1,  0.117,  0.1, 0.181,0.066, 0.15, 0.1, 0.1,0.15
排序:  [0.035, 0.066, 0.066, 0.066, 0.066, 0.067, 0.067, 0.083, 0.083, 0.084, 0.084, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.101, 0.116, 0.116, 0.117, 0.117, 0.118, 0.134, 0.134, 0.15, 0.15, 0.181]
        数量：33
        最大：0.181, +0.081
        最小：0.035, -0.065
        平均：0.1
        最大-最小平均：0.108
        最大-最小-平均-差值: 0.073
        最小-最大范围：[0.035, 0.181]
        quantile range:  (0.034, 0.166)
        2-sigma range:  (0.042, 0.158)
        3-sigma range:  (0.014, 0.186)

夜兰的e引爆到四命生效也有延迟，但似乎都是0.05甚至更短

## 三小只第一次行动的规律

第一次扣血距离芙芙点按e的时间：1.4, 1.45, 1.434, 1.317, 1.466, 1.383, 1.466
排序:  [1.317, 1.383, 1.4, 1.434, 1.45, 1.466, 1.466]
        数量：7
        最大：1.466, +0.049
        最小：1.317, -0.1
        平均：1.417
        最大-最小平均：1.391
        最大-最小-平均-差值: 0.075
        最小-最大范围：[1.317, 1.466]
        quantile range:  (1.291, 1.558)
        2-sigma range:  (1.316, 1.517)
        3-sigma range:  (1.266, 1.567)
扣血窗口：0, 0.133,  0.15,  0.082,  0.167,  0.117,  0.1,  0.1,  0.017
        数量：9
        最大：0.167, +0.071
        最小：0, -0.096
        平均：0.096
        最大-最小平均：0.084
        最大-最小-平均-差值: 0.083
        最小-最大范围：[0, 0.167]
        quantile range:  (0.005, 0.21)
        2-sigma range:  (-0.01, 0.203)
        3-sigma range:  (-0.063, 0.256)

### UIYO7432

00:00:07.486：芙芙点按e

00:00:08.886：夫人和勋爵同时扣血，8.886 - 7.486 = 1.4
00:00:09.019：螃蟹扣血，9.019 - 8.886 = 0.133

00:00:16.337：勋爵和螃蟹扣血
00:00:16.487：夫人扣血，16.487 - 16.337 = 0.15

### AWBW5598

00:00:07.436：芙芙点按e

00:00:08.886：勋爵扣血，8.886 - 7.436 = 1.45
00:00:08.968：夫人和螃蟹扣血，8.968 - 8.886 = 0.082

00:00:16.637：夫人、勋爵同时扣血
00:00:16.804：螃蟹扣血，16.804 - 16.637 = 0.167

### WOOK8296

00:00:07.552：芙芙点按e

00:00:08.986：螃蟹扣血，8.986 - 7.552 = 1.434
00:00:09.103：夫人、勋爵扣血，9.103 - 8.986 = 0.117

00:00:16.654：夫人、螃蟹扣血
00:00:16.754：勋爵扣血，16.754 - 16.654 = 0.1

### UFZH5352

00:00:08.352：芙芙点按e

00:00:09.669：夫人扣血，9.669 - 8.352 = 1.317
00:00:09.769：螃蟹和勋爵扣血，9.769 -  9.669 = 0.1

00:00:17.804：三小只同时扣血， 0

### TWKI0909

00:00:05.686：芙芙点按e
00:00:07.152：螃蟹扣血，7.152 - 5.686 = 1.466
00:00:07.169：夫人和勋爵同时扣血，7.169 - 7.152 = 0.017，一帧，可以视为同时

### ASGN4435

00:00:05.244：芙芙点按e
00:00:06.627：夫人和螃蟹一起扣血，6.627 - 5.244 = 1.383
00:00:06.644：勋爵扣血， 6.644 - 6.627 = 0.017

### OORO3876

00:00:04.602：芙芙点按e
00:00:06.068：三小只同时扣血， 6.068 - 4.602 = 1.466

## 手法2关键流程

手法：芙芙q，万叶q，芙芙eaa 夜兰eqe，芙芙zaaz, 万叶e, 夜兰aaaeaa......

q: 芙芙q出伤
0. 芙芙点按e：qe间隔：2.8, 2.884, 2.783,  2.85, 	2.833+-0.051, [2.783, 2.884]

01. 第一刀															  1-0：1.15, 1.15, 1.15, 1.284					1.217+-0.067	[1.15, 1.284]
02. 三小只开始扣血                                             1-0： 1.4 ,  1.45 , 1.434 ,  1.317 			1.383+-0.067	[1.317, 1.45]
03. 第二刀                                                               3-1：0.4, 0.366, 0.401, 0.4					0.384+-0.017	[0.366, 0.401]
04. 荒刀                                                                   4-1： 0.55 ,  0.6 , 0.617 ,  0.583 			0.584+-0.033	[0.55, 0.617]

05. 切夜兰出来                                                      5-3：0.333, 0.45, 0.549, 0.4				0.441+-0.108	[0.333, 0.549
06. 夜兰e引爆                                                        6-5： 0.7 ,  0.667 , 0.684 ,  0.683  		0.683+-0.017	[0.667, 0.7]
07. 夜兰四命一层生效                                         7-6：0.016, 0.05, 0.05, 0.083				0.05+-0.033		[0.016, 0.083]
08. 夜兰q动画开始                                               8-6：0.15, 0.333, 0.133, 0.3				0.233+-0.1		[0.133, 0.333]
09. 夜兰q出伤                                                        9-8：1.35, 1.3, 1.333, 1.352				0.326+-0.026	[1.3, 1.352]
10. 夜兰四命生效两层                                         10-9：0.868, 0.952, 0.952, 0.933		0.91+-0.042		[0.868, 0.952]

11. 切芙芙出来                                                      11-10： 0.3 ,  0.316 , 0.25 ,  0.3  		0.283+-0.033	[0.25, 0.316]
12. 三小只开始消失                                             12-11： 0.767 ,  0.751 , 0.783 ,  0.783 		0.767+-0.016	[0.751, 0.783]
13. 第三刀重击                                                      13-11： 0.8 ,  0.834 , 0.883 ,  0.867  			0.842+-0.041	[0.8, 0.883]
		第三刀-第一刀：4.901, 5.218, 5.185, 5.235，将上面从第一刀起间隔最长的加起来的话：0.401 + 0.549 + 0.7 + 0.333 + 1.352 + 0.952 + 0.316 + 0.883 = 5.486，没超过2.9 * 2 = 5.8
14. 第四刀                                                               14-13：0.767, 0.75, 0.75, 0.766					0.758+-0.009	[0.75, 0.767]
15. 第五刀                                                               15-14：0.383, 0.4, 0.384, 0.417					0.4+-0.017		[0.383, 0.417]
16. 芒刀                                                                   16-14： 0.617 ,  0.6 , 0.717 ,  0.734  			0.667+-0.067	[0.6, 0.734]
17. 第六刀                                                               17-15：0.734, 0.7, 0.716, 0.683					0.709+-0.025	[0.683, 0.734]

18. 三小只开始扣血                                             18-17： 0.916 ,  0.983 , 0.917 ,  1.067  	0.992+-0.075	[0.916, 1.067]

19. 芙芙大招动画消失                                         19-q：18.003, 18.02, 17.92, 17.97			17.97+-0.005，大招实际持续时间：18.495+-0.242	[18.253, 18.737]


关于夜兰大招效果结束时间：从夜兰的相关分析看，是夜兰q出伤 + 14.97秒




排轴算法的要求：

* 固定轴：即上面列出的前18点
* 自动轴：分两类，一类是三小只的扣血、出伤，一类是治疗
	* 三小只的轴分两部分
		1. 切白芙前：计算出第一次扣血时间后，对后续的扣血、出伤点自动计算
		2. 切白芙后：根据第18号自动计算
	* 治疗，分三个部分
		1. 其他三人的满命治疗：从上面四个案例来看，第三刀距离第一刀时间不超过2.9 * 2 = 5.8秒，所以前三刀的治疗是能续上的，直接按2.9 * 3 = 8.7进行排轴
		2. 众水的歌者：从第12号自动计算
		3. 芙芙自身的治疗轴
			a. 要根据延迟值排在其他三人之后
			b. 如果“不小心”被众水的歌者抢先奶满了，满命治疗点会发生变化，而能否奶满是需要实际计算时才知道的，排轴时并不清楚！！！那么问题来了，实际计算时，如果是众水歌者奶满的，如何重排后面的治疗时间点？用isinstance找出来，重新设置时间，然后对List重新按时间排序

排轴算法：

* 计算出第一刀、第一次扣血、q出伤时间，插入list
* 根据第一刀时间说过算出治疗时间点，插入list
* 计算切白芙前的三小只扣血、出伤时间点，插入List
* 计算出再次切为黑芙后，三小只扣血、出伤时间点，插入List
* 根据切白芙后三小只消失的时间点，计算众水的歌者的治疗时间点，插入List
* 最后，对list按照时间点从小到大排序，得到最终的行动轴

关于线程的模似：（TODO: 生效延迟如何模拟？）

* 先计算出一个“结算点”，初始“结算点”值为三小只第一次扣血的时间点
* 如果是出伤事件，则根据当前的气氛值、增伤、hp计算伤害值
* 如果当前事件会经发气氛值、hp变化，则:
	* 如果当前事件时间小于结算点，则放入cache_list，不会立即改变当前的气氛值、增伤、hp
	* 如果当前事件时间大于等于结算点，则
		* 对cache_list进行结算，即：对当前的气氛值、增伤、hp进行调整
		* 结算后，重新计算结算点
		* 如果结算时cache_list为空，
			* 如果当前事件不会引发气氛值、增伤、hp变化，则保持结算点不变
			* 如果当前事件会引发气氛值、增伤、hp变化，则立即对当前的事件进行结算并以当前的事件时间为基准重新计算下一次结算点
						【TODO: 相邻极近的两个事件如何一起结算？】
									---> 将adjust做成一个单独的事件AdjustAction，do()的时候，会往后检查一小段时间的事件，如果可以“合并”计算，则将那个事件设置为done
									---> 注：一旦合并结算了，则“生效时间”在合并结算之后！！！
						
触发式action: hp变化时或造成伤害时触发(普攻，战技，元素爆发）
例如：专武叠层
如何实现这些触发式action呢？		事件回调，注册对某类事件感兴趣，发生此类事件时就会有回调
一个action，不光要有功能性，还可能触发其他事件
			
关于生效延迟：我们收入快照snapshot，因为是fufu主动action.do()，因此fufu是知道当前正在do的action时间的

				---> 如果用snapshot方式，如处理相邻极近的两个事件？

for a in action_list:
	# 根据a的timestamp，将to_be_effective_list里timestamp在此之前的使之 “真实生效”
	a.do(self, index)

FIXME: 万叶增伤何时生效，何时失效的问题如何处理？ 单独写一个 增伤失效的Action和减抗失效的Action即可，不需要处理的太复杂
	
FIXME: 专武生命值叠层是遵循0.5秒结算机制，还是立即生效？
	
class Qi_HP_Bonus:
    def __init__(self, fixed_hp, fixed_e_bonus, fixed_common_bonus,
                 qi_fen_level, zhuan_wu_hp_level, zhuan_wu_e_bonus_level,
                 ye_lan_e_num=0, ye_lan_q_bonus=0):
        self.fixed_hp = fixed_hp
        self.fixed_e_bonus = fixed_e_bonus
        self.fixed_common_bonus = fixed_common_bonus

        self.qi_fen_level = qi_fen_level
        self.zhuan_wu_hp_level = zhuan_wu_hp_level
        self.zhuan_wu_e_bonus_level = zhuan_wu_e_bonus_level
        self.ye_lan_e_num = ye_lan_e_num
        self.ye_lan_q_bonus = ye_lan_q_bonus

        self.__hp = None
        self.__common_bonus = None
        self.__e_bonus = None

    def hp(self):
        if not self.__hp:
            extra_hp_percent = self.ye_lan_e_num * 0.1
            extra_hp_percent += self.zhuan_wu_hp_level * zhuan_wu_hp_bei_lv
            if ming_zuo_num >= 2 and self.qi_fen_level > 400:
                extra_hp_percent += min((self.qi_fen_level - 400)
                                        * 0.0035, 1.4)

            self.__hp = self.fixed_hp + \
                int(fu_ning_na_base_hp * extra_hp_percent)

        return self.__hp

    def common_elem_bonus(self, has_extra_bonus=True, in_front=False):
        if not self.__common_bonus:
            bonus = self.fixed_common_bonus
            bonus += min(400, self.qi_fen_level) * qi_bonus_bei_lv
            if in_front:
                bonus += self.ye_lan_q_bonus
            if not has_extra_bonus:
                bonus -= sum(extra_common_elem_bonus.values())

            self.__common_bonus = bonus

        return self.__common_bonus

    def e_bonus(self, has_extra_bonus=True, in_front=False):
        if not self.__e_bonus:
            bonus = self.fixed_e_bonus
            bonus += self.zhuan_wu_e_bonus_level * zhuan_wu_e_bonus_bei_lv
            bonus += gu_you_tian_fu_2_bonus(self.hp())
            bonus += min(400, self.qi_fen_level) * qi_bonus_bei_lv
            if in_front:
                bonus += self.ye_lan_q_bonus
            if not has_extra_bonus:
                bonus -= sum(extra_e_bonus.values())

            self.__e_bonus = bonus

        return self.__e_bonus


class Damage:
    def __init__(self, bei_lv, has_feng_tao=True, is_extra=False, has_extra_bonus=True, in_front=False):
        self.bei_lv = bei_lv
        self.has_feng_tao = has_feng_tao
        self.is_extra = is_extra
        self.has_extra_bonus = has_extra_bonus
        self.in_front = in_front

    def set_qi_hp_bonus(self, qi_hp_bonus: Qi_HP_Bonus):
        self.qi_hp_bonus = qi_hp_bonus

    def damage(self):
        return 0


class E_Damage(Damage):
    def damage(self):
        elem_bonus = self.qi_hp_bonus.e_bonus(
            self.has_extra_bonus, self.in_front)
        d = self.qi_hp_bonus.hp() * self.bei_lv / 100 * e_extra_damage_bonus * elem_bonus
        if not self.has_feng_tao:
            d /= 1.2777  # 风套增伤27.77%
        return d


class Fu_Ren_E_Damage(E_Damage):
    def __init__(self, has_feng_tao=True, is_extra=False, has_extra_bonus=True, in_front=False):
        super().__init__(FU_REN_BEI_LV, has_feng_tao, is_extra, has_extra_bonus, in_front)


class Xun_Jue_E_Damage(E_Damage):
    def __init__(self, has_feng_tao=True, is_extra=False, has_extra_bonus=True, in_front=False):
        super().__init__(XUN_JUE_BEI_LV,  has_feng_tao, is_extra, has_extra_bonus, in_front)


class Pang_Xie_E_Damage(E_Damage):
    def __init__(self, has_feng_tao=True, is_extra=False, has_extra_bonus=True, in_front=False):
        super().__init__(PANG_XIE_BEI_LV, has_feng_tao, is_extra, has_extra_bonus, in_front)


class Ming_6_Damage(Damage):
    def __init__(self, bei_lv):
        super().__init__(bei_lv, has_feng_tao=True,
                         is_extra=False, has_extra_bonus=True, in_front=True)

    def damage(self):
        elem_bonus = self.qi_hp_bonus.common_elem_bonus(
            self.has_extra_bonus, in_front=True)
        d = self.qi_hp_bonus.hp() * self.bei_lv / 100 * elem_bonus
        if not self.has_feng_tao:
            d /= 1.2777
        return d


class Bai_Fu_Damage(Ming_6_Damage):
    def __init__(self):
        super().__init__(BAI_FU_BEI_LV)


class Hei_Fu_Damage(Ming_6_Damage):
    def __init__(self):
        super().__init__(HEI_FU_BEI_LV)

## FIXME

FIXME：芙芙大招效果是从什么时候开始计算的？

夜兰第三个e要加到芙芙身上，还有夜兰自身 （done)

fixme: 夜兰的增伤只针对前台！！！（done)
fixme: 手法1里用的是琴，需要换成万叶再测试(done)
fixme: 要把所有的代码再检查一遍，行秋那样的bug不能出了呀
fixme: 夜兰开大开始~结束看样子是要记录的，这期间不夜兰扣血

芙芙的伤害不确定性，算法可能需要多次计算取平均了

换其他角色在前台，看治疗是对前台特殊还是只对芙芙本人特殊(done)

气氛值调整和生命值调整线程是同一个吗？

* 专武的叠层导致的生命值变动不受气氛值叠层数的影响，这意味着这两个线程是需要分开的
	第一层：三小只首次发动攻击时，这次会同时唤醒两个线程
	第二层：芙芙治疗，芙芙治疗是1.2秒左右就开始，芙芙的第一刀和夫人扣血也几乎同时，芙人的扣血在大约1.6秒之后，所以必定是芙芙的治疗先触发专武二层
						这次也会同时唤醒两个线程，这是因为间隔时间长达1.2秒的缘故，两个线程都陷入了阻塞等待

* 二命后，超过400层时，气氛值的变动会触发生命值调整，此时两个线程是几乎同时唤醒的，是由气氛值调整来唤醒生命值调整线程，因为只有气氛值调整线程知道气氛值发生了变化

从上面的分析来看，这两个调整线程可以合并为一个

调试方法：先用TWKI0909里的流程调试看算法是否能基本符合实际数值
程序模似运行是不可能sleep(0.5)的，那么要如何模拟呢？

* 首先，有一个出伤列表，不需要时间戳
		注：如果会切换黑-白芙，还需要记录三小只消失的时间点、重新召唤出来第一次扣血的时间点、第三刀的出伤时间
		注：有一部分伤害是在大招结束后打出的，因此要记录大招结束的时间
* 然后，我们要进行“排轴”，轴上有：满命六刀出刀时间，扣血时间，治疗时间，出伤时间，气氛值调整时间、生命值调整时间
如果有夜兰，需要将夜兰e的时间也排到轴上，因为这会导致大家的生命值上限变化

排轴以芙芙点按e为起点00:00:00.000

Step1: 第一刀在按e后的1.3~1.45秒左右，计算出芙芙第一刀出伤时间，芙芙第一刀决定了后续治疗的规律
	step1.1: 有了第一刀时间，我们可以计算出后续五刀的时间点（注：第三刀是根据实际来决定的，第四、五、六刀根据第三刀决定）
	step1.2: 有了第一刀时间，我们可以计算出各个治疗时间点（前、后台要区分开）
			step1.2.1: 芙芙的第一次治疗触发专武生命值叠层，时间点和第一次治疗的时间点相同
			step1.2.2: 芙芙治疗自身的时间点，也是专武战技增伤叠层+1的时间点

Step2: 三小只开始扣血在点按e后有1.3~1.466，模拟出三小只的扣血时间，三小只扣血虽然有先后，但会在0.017秒内完成
	step2.1：专武生命值叠层，时间点和三小只最先扣血的时间点相同
	step2.2：专武战技增伤叠层+1，时间点和三小只最先扣血的时间点相同

Step3: 对于后续的伤害序列
	---> 如果是夫人，则在上次夫人扣血1.6秒左右扣血，在上次夫人出伤1.6秒左右出伤
			---> 夫人第二次扣血时，专武战技增伤叠层+1
	---> 螃蟹和勋爵也类似，参见前面的研究数据制定间隔
	---> 如果碰到了切换点，则需要重新来，算法需要稍微变一下：
				---> 三小只扣血后，就计算下一次扣血的时间
				---> 三小只出伤后，就计算下一次出伤的时间
				---> 遇到切换点，则将时间更新为切换点时点（浮动0.017)

Step4: 扫描上面的序列，针对会引起气氛值变化的项
	---> 将变化数据放入pending_list
		---> 如果当前的气氛值-生命值调整线程为blocking状态，则立即“运行”，运行方式参见后面“运行点”的机制
		---> 气氛值-生命值调整线程初始状态是“blocking”状态
	---> 如果碰到“运行点”，则
		---> 如果pending_list不为空，则
			--->  清空pending_list，计算气氛值，结果插入“当前时间点+0.1秒左右"的节点，称之为“气氛值-生命值结果节点”，
				---> 节点数据里记录：气氛值层数，额外的生命值百分比(专武)，夜兰e的次数，e技能额外增伤
			---> 在轴上的“当前时间点+0.5秒左右”插入一个“运行点”
		---> 如果pending_list是空的，则进入blocking状态

Step5: 再次扫描序列，这次扫描才是真正用于计算伤害的
		---> 碰到“气氛值变化节点”，则更新当前的增伤、生命值上限（注：夜兰e会作用于所有人）
		---> 碰到出伤，则计算伤害
		
		
通过上面的算法，轴上有以下类型的数据

* 气氛值-生命值结果节点：气氛值层数，专武生命值层数，专武战技增伤层数，夜兰e次数
* 满命六刀：只需区分黑白即可，白刀会扣全队1%生命，满命六刀是站场的，有可能吃到夜兰q这样的前台增伤
* 夫人、勋爵、螃蟹扣血节点
* 治疗节点：治疗对象分为teammate, furina
* 运行点
* 夫人、勋爵、螃蟹出伤节点：倍率，风套减抗效果是否还在，是否有万叶增伤

node_type:  

* qi_hp_bonus(气氛值-生命值结果节点)
* hp_change(扣血、治疗节点)
* damage (满命六刀，三小只，q, e，白刀的class还要继承hp_change)
* qi_hp_adjust_thread_running_point （运行点)

需要两个列表：

* hp_change列表：扣血、治疗，白刀
	* 运行点是一个特殊的hp_change节点
* damage列表：满命六刀，三小只，q, e
	* qi_hp_bonus则依附于damage节点，不单独存在于列表上
	
	
另一种思路：所有的类都有一个do()函数，他们会改变当前的state，或调整生命值，或调整增伤，或造成伤害
所以列表上的都是action或事件(event)？

FIXME: 那些0.017的间隔似乎就是同时的，只不过视频里有时会错开一帧（1000ms / 60 = 16.7ms，即0.017秒

！！！使用额外线程计算，用进程调度来创造一些不确定性





